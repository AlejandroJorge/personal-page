---
import type { AllowedLanguage } from "@/config/language";
import { getCSSVars, type LightningMode } from "@/config/theme";
import { translate, type TextContent } from "@lib/internationalization";
import { getRelativeLocaleUrl } from "astro:i18n";

interface Route {
  pathWithoutLang: string;
  name: TextContent;
}
const routes: Route[] = [
  { pathWithoutLang: "/about", name: { en: "About", es: "Acerca de" } },
  { pathWithoutLang: "/blog", name: { en: "Blog", es: "Blog" } },
  { pathWithoutLang: "/projects", name: { en: "Projects", es: "Proyectos" } },
];

interface Props {
  lang: AllowedLanguage;
  mode: LightningMode;
}
const { lang, mode } = Astro.props;
---

<nav>
  <ul>
    {
      routes.map((route) => (
        <li>
          <a href={getRelativeLocaleUrl(lang, route.pathWithoutLang)}>
            {translate(route.name, lang)}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<style define:vars={getCSSVars(mode)}>
  a {
    text-decoration: none;
    color: var(--textColor);
    font-weight: 600;
    font-size: 1.15rem;
    transition: 0.3s;
  }

  a:hover {
    color: var(--primaryColor);
  }

  a::after {
    content: "";
    display: block;
    height: 0.15rem;
    background-color: var(--textColor);
    margin-top: 0.1rem;
    position: relative;
    opacity: 0;
    transition: 0.3s;
  }

  a:hover::after {
    opacity: 1;
    background-color: var(--primaryColor);
  }

  ul {
    display: flex;
    gap: 5rem;
    list-style: none;
    justify-content: center;
    align-items: center;
  }

  li {
    text-align: center;
  }
</style>
